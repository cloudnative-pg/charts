apiVersion: batch/v1
kind: Job
metadata:
  name: paradedb-enterprise-test
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: data-test
        env:
          - name: DB_URI
            valueFrom:
              secretKeyRef:
                name: paradedb-ncc-1701-d-app
                key: uri
        image: alpine:3.19
        command: ['sh', '-c']
        args:
          - |
            apk --no-cache add postgresql-client
            psql "$DB_URI" <<-EOSQL
              CALL paradedb.create_bm25_test_table(
                schema_name => 'public',
                table_name => 'mock_items'
              );          
              CALL paradedb.create_bm25(
                index_name => 'search_idx',
                table_name => 'mock_items',
                key_field => 'id',
                text_fields => paradedb.field('description') || paradedb.field('category'),
                numeric_fields => paradedb.field('rating'),
                boolean_fields => paradedb.field('in_stock'),
                datetime_fields => paradedb.field('created_at'),
                json_fields => paradedb.field('metadata'),
                range_fields => paradedb.field('weight_range')
              );
            EOSQL
            RESULT=$(psql "$DB_URI" -t) <<-EOSQL
              SELECT description
              FROM mock_items
              WHERE description @@@ '"bluetooth speaker"~1'
              LIMIT 1;
            EOSQL
            echo -$RESULT-
            test "$RESULT" = " Bluetooth-enabled speaker"
