apiVersion: batch/v1
kind: Job
metadata:
  name: data-write
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: data-write
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: source-paradedb-superuser
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: source-paradedb-superuser
                key: password
          - name: DB_URI
            value: postgres://$(DB_USER):$(DB_PASS)@source-paradedb-rw:5432
        image: alpine:3.19
        command: ['sh', '-c']
        args:
         - |
           set -e
           apk --no-cache add postgresql-client
           psql "$DB_URI" -c "CREATE DATABASE mygooddb;"
           psql "$DB_URI/mygooddb" -c "CREATE TABLE mygoodtable (id serial PRIMARY KEY);"
           psql "$DB_URI/paradedb" <<-EOSQL
             CALL paradedb.create_bm25_test_table(
               schema_name => 'public',
               table_name => 'mock_items_paradedb_enterprise'
             );
             CREATE INDEX search_idx_paradedb_enterprise ON mock_items_paradedb_enterprise
             USING bm25 (id, description, category, rating, in_stock, created_at, metadata, weight_range)
             WITH (key_field='id');
           EOSQL
           RESULT=$(psql "$DB_URI/paradedb" -t) <<-EOSQL
             SELECT description
             FROM mock_items_paradedb_enterprise
             WHERE description @@@ '"bluetooth speaker"~1'
             LIMIT 1;
           EOSQL
           echo -$RESULT-
           if [ "$RESULT" = " Bluetooth-enabled speaker" ]; then
             echo "Test for description search passed."
           else
             echo "Test for description search failed."
             exit 1
           fi
