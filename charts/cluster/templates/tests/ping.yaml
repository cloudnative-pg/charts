{{- $clusterFullname := include "cluster.fullname" . -}}
{{- $namespace := include "cluster.namespace" . -}}
{{- $secretName := printf "%s-app" $clusterFullname -}}
{{- $pgService := $secretName -}}

{{- if .Values.poolers }}
  {{- range .Values.poolers }}
    {{- if eq .name "rw" }}
      {{- $secretName = printf "%s-pooler-%s" $clusterFullname .name -}}
      {{- $pgService = $secretName -}}
    {{- end }}
  {{- end }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster.fullname" . }}-ping-test
  namespace: {{ include "cluster.namespace" . }}
  labels:
    app.kubernetes.io/component: database-ping-test
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "cluster.fullname" . }}-ping-test
      labels:
        app.kubernetes.io/component: database-ping-test
    spec:
      restartPolicy: Never
      containers:
        - name: alpine
          image: alpine:3.17
          command: [ 'sh' ]
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: username
            - name: PGPASS
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: password
            - name: PGDBNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: dbname
                  optional: true
          args:
            - "-c"
            - >-
              apk add postgresql-client &&
              psql "postgresql://$PGUSER:$PGPASS@{{ $pgService }}.{{ $namespace }}.svc.cluster.local:5432/${PGDBNAME:-$PGUSER}" -c 'SELECT 1'
