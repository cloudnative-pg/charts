{{- range .Values.poolers }}
{{/* Only create secret for 'rw' pooler */}}
{{- if eq .name "rw" }}
{{- $username := "app" }}
{{- $dbname := "app" }}
{{- if $.Values.cluster.initdb }}
  {{- $username = $.Values.cluster.initdb.owner | $.Values.cluster.initdb.database }}
  {{- $dbname = $.Values.cluster.initdb.database }}
{{- end }}

{{- $port := "5432" }}
{{- $poolerName := printf "%s-pooler-%s" (include "cluster.fullname" $) .name }}

{{- $host := printf "%s.%s.svc.cluster.local" $poolerName $.Release.Namespace }}

{{- /* Retrieve existing secret to prevent re-creation during Helm upgrade. */}}
{{- $secretObj := lookup "v1" "Secret" $.Release.Namespace (printf "%s-%s-app" (include "cluster.fullname" $) .name) }}
{{- $password := "" }}
{{- if and $secretObj $secretObj.data (index $secretObj.data "password") }}
  {{- $password = index $secretObj.data "password" }}
{{- else }}
  {{- $password = randAlphaNum 64 | b64enc }}
{{- end }}

{{- $uri := printf "postgresql://%s:%s@%s:%s/%s" $username ($password | b64dec) $host $port $dbname }}
{{- $jdbcUri := printf "jdbc:postgresql://%s:%s/%s?user=%s&password=%s" $host $port $dbname $username ($password | b64dec) }}
{{- $pgpass := printf "%s:%s:%s:%s:%s\n" $host $port $dbname $username ($password | b64dec) }}

apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cluster.fullname" $  }}-pooler-{{ .name }}
  namespace: {{ include "cluster.namespace" $ }}
type: kubernetes.io/basic-auth
data:
  dbname: {{ $dbname | b64enc }}
  fqdn-jdbc-uri: {{ $jdbcUri | b64enc }}
  fqdn-uri: {{ $uri | b64enc }}
  host: {{ $host | b64enc }}
  jdbc-uri: {{ $jdbcUri | b64enc }}
  password: {{ $password }}
  pgpass: {{ $pgpass | b64enc }}
  port: {{ $port | b64enc | quote }}
  uri: {{ $uri | b64enc }}
  user: {{ $username | b64enc }}
  username: {{ $username | b64enc }}
---
{{- end }}
{{- end }}